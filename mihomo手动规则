# Clash 配置文件示例（带非常详细说明，适合小白理解）

# ---------------------- 代理端口配置 ----------------------
port: 7890                # HTTP代理端口，浏览器和系统的HTTP代理都用这个端口访问
# 修改端口，只需改这里，端口冲突改成其他数字即可，比如8080

socks-port: 7891          # SOCKS5代理端口，支持SOCKS协议的程序用这个端口
# 不使用SOCKS5可以注释或删除此行

allow-lan: true           # 允许局域网设备访问此代理（比如手机、平板通过同一WiFi使用）
# 如果不想让局域网访问，改为false或删除此行

bind-address: "*"         # 监听所有网络接口地址，方便局域网设备访问
# 默认*，只监听本机可改为127.0.0.1

mode: rule                # 代理模式，rule表示使用规则分流
# 还可用global（全局代理）、direct（全直连）

log-level: info           # 日志等级，info是正常信息，可改为warning、error、debug
# 调试时用debug，平时用info即可

external-controller: 127.0.0.1:7890  # 外部控制端口，用于GUI软件控制
# 如果使用其他控制面板，改成对应端口即可

# ---------------------- DNS 配置 ----------------------
dns!:
  enable: false              # 启用Clash内置DNS解析
  # 关闭后，使用系统DNS，但可能导致解析污染或规则失效

  ipv6: true               # 是否启用IPv6解析，通常关闭避免问题
  # 如果你环境支持IPv6且需要，可以改为true

  listen: 127.0.0.1:5353    # DNS服务监听地址及端口
  # 系统DNS可以设置为127.0.0.1，端口5353也可以改成53或其他端口，但要对应系统设置

  enhanced-mode: fake-ip    # DNS增强模式，fake-ip模式伪装IP，兼容性好
  # fake-ip - 用假的IP地址返回DNS，适合游戏和绕过DNS污染
  # redir-host - 不伪装IP，直接重定向，兼容性稍弱

  fake-ip-filter:           # fake-ip模式下不伪装IP的域名列表
    - '*.lan'               # 本地局域网域名不伪装，确保本地设备通信正常
    - '*.local'
    - 'localhost.ptlogin2.qq.com'
    - 'stun.*.*'
    - 'stun.*'
    - 'dns.msftncsi.com'
    - 'www.msftncsi.com'
    - '*.ntp.org.cn'
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - 'xbox.*.*.microsoft.com'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - '+.router.asus.com'
  # 可根据需要增删此列表，防止误代理本地服务

  nameserver:              # 主要DNS服务器，优先用这些服务器解析
    - 223.5.5.5            # 阿里DNS，速度快且稳定
    - 119.29.29.29         # 腾讯DNS

  fallback:                # 回退DNS服务器，主DNS解析失败时使用（支持HTTPS、TLS）
    - https://1.1.1.1/dns-query         # Cloudflare DOH
    - https://8.8.8.8/dns-query         # Google DOH
    - https://208.67.222.222/dns-query  # OpenDNS DOH
    - tls://dns.rubyfish.cn:853         # Rubyfish DNS DoT协议

  fallback-filter:          # 回退DNS过滤规则
    geoip: true             # 中国IP不走回退DNS，避免污染
    ipcidr:
      - 240.0.0.0/4        # 保留地址段不走回退

  fallback-cache: true      # 开启回退DNS缓存，提升解析速度

  proxy-server-nameserver: # DNS请求走代理时的服务器（非必需）
    - https://1.1.1.1/dns-query

# 增加DNS服务器：nameserver和fallback列表中增加服务器地址即可。
# 删除DNS服务器：直接删除对应行。
# 修改DNS监听端口：修改 listen 字段即可。
# 若遇解析异常，可以尝试切换 enhanced-mode。

# ---------------------- 代理策略组配置 ----------------------

proxy-groups:
  # 策略组用于将多个节点归为一组，方便分流与选择。

  - name: 节点选择
    type: select              # 类型为“选择”，用户可手动切换节点
    proxies:
      - 自动选择
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT               # 直连，不走代理
    icon: https://github.com/clash-verge-rev/clash-verge-rev/raw/main/src-tauri/icons/icon.png
  # type可选值：
  # - select：手动选择
  # - url-test：自动测速选择延迟最低节点
  # - fallback：顺序使用节点，失败自动切换
  # - load-balance：负载均衡分发流量

  - name: 自动选择
    type: url-test            # 自动测速并选择延迟最低节点
    include-all: true         # 包含所有节点进行测试
    interval: 86400           # 测试间隔，单位秒，这里为24小时
    tolerance: 50             # 延迟容忍值，超过此值的节点不被选
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png

  - name: 特殊使用
    type: select
    include-all: true
    filter: "(?i)台|新北|彰化|TW|Taiwan"
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png

  - name: 电报消息
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png

  - name: OpenAi
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png

  - name: 油管视频
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png

  - name: TikTok
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/TikTok.png

  - name: 奈飞视频
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 奈飞节点          # 专门针对Netflix解锁优化的节点
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png

  - name: Google
    type: select
    proxies:
      - 节点选择
      - 美国节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google.png

  - name: AppStore
    type: select
    proxies:
      - DIRECT               # 优先直连Apple服务器，防止误封
      - 节点选择
      - 美国节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 韩国节点
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png

  - name: 全球直连
    type: select
    proxies:
      - DIRECT
      - 节点选择
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png

  - name: 漏网之鱼
    type: select
    proxies:
      - 节点选择
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - 自动选择
      - DIRECT
    icon: https://img.icons8.com/?size=144&id=9Mz1BhM4ui54&format=png&color=000000
  # 兜底策略，匹配未被其他规则匹配的流量走此组。

  # 以下为按节点名称自动分类的节点组，方便管理大量节点。

  - name: 香港节点
    type: select
    include-all: true
    filter: "(?i)港|HK|hk|Hong Kong|HongKong|hongkong"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
  # filter支持正则表达式匹配节点名称，(?i)忽略大小写。

  - name: 台湾节点
    type: select
    include-all: true
    filter: "(?i)台|新北|彰化|TW|Taiwan"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png

  - name: 日本节点
    type: select
    include-all: true
    filter: "(?i)日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png

  - name: 美国节点
    type: select
    include-all: true
    filter: "(?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png

  - name: 新加坡节点
    type: select
    include-all: true
    filter: "(?i)新加坡|坡|狮城|SG|Singapore"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png

  - name: 韩国节点
    type: select
    include-all: true
    filter: "(?i)KR|Korea|KOR|首尔|韩|韓"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png

  - name: 奈飞节点
    type: select
    include-all: true
    filter: "(?i)NF|奈飞|解锁|Netflix|NETFLIX|Media|流媒体"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png

# ------------------- 远程规则配置（rule-providers） -------------------

rule-providers:
  SteamCN:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/SteamCN/SteamCN.list
    path: ./ruleset/SteamCN.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Telegram:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Telegram/Telegram.list
    path: ./ruleset/Telegram.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  OpenAi:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/OpenAI/OpenAI.list
    path: ./ruleset/OpenAi.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  YouTube:
    url: https://raw.githubusercontent.com/myzxdcd/CS/refs/heads/main/Clash/YouTube.yaml
    path: ./ruleset/YouTube.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Netflix:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Netflix/Netflix.list
    path: ./ruleset/Netflix.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  TikTok:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok.list
    path: ./Ruleset/TikTok.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Google:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Google/Google.list
    path: ./ruleset/Google.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Apple:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Apple/Apple.list
    path: ./ruleset/Apple.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  HT:
    url: https://raw.githubusercontent.com/myzxdcd/CS/refs/heads/main/Clash/HT
    path: ./Ruleset/HT
    behavior: classical
    interval: 86400
    format: text
    type: http

  ChinaIp:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Surge/ChinaIPs/ChinaIPs.list
    path: ./Ruleset/ChinaIPs.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Lan:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Lan/Lan.list
    path: ./Ruleset/Lan.list
    behavior: classical
    interval: 86400
    format: text
    type: http

# 远程规则添加说明：
# 新增规则提供者时，复制对应区块，修改url为规则文件链接，
# path为本地缓存文件相对路径，interval为更新周期（秒），
# behavior大多使用classical，format可为text/yaml/json。

# ------------------- 规则配置 -------------------

rules:
  - DOMAIN-SUFFIX,dns.google, 节点选择
  - DOMAIN-SUFFIX,cloudflare-dns.com, 节点选择
  - DOMAIN-SUFFIX,rubyfish.cn, 节点选择
  - "RULE-SET,Lan,全球直连, no-resolve"
  - "GEOSITE,cn, 全球直连, no-resolve"
  - "GEOIP,CN, 全球直连, no-resolve"
  - "RULE-SET,ChinaIp,全球直连, no-resolve"
  - "RULE-SET,SteamCN, 全球直连"
  - "RULE-SET,Telegram, 电报消息"
  - "RULE-SET,OpenAi, OpenAi"
  - "RULE-SET,YouTube, 油管视频"
  - "RULE-SET,Netflix, 奈飞视频"
  - "RULE-SET,TikTok, TikTok"
  - "RULE-SET,Google, Google"
  - "RULE-SET,Apple, AppStore"
  - "RULE-SET,HT,特殊使用"
  - "MATCH, 漏网之鱼"        # 兜底规则，未匹配流量走“漏网之鱼”组

# 规则解释：
# - DOMAIN-SUFFIX 表示匹配某个域名后缀。
# - RULE-SET 调用远程规则文件中的规则。
# - GEOSITE 根据地理位置域名分组。
# - GEOIP 根据IP地址归属国家分组。
# - MATCH 匹配所有剩余流量。

# 规则添加示例：
# - DOMAIN-SUFFIX,example.com, 自动选择
# - DOMAIN-KEYWORD,facebook, 节点选择
# - IP-CIDR,8.8.8.8/32, DIRECT

# 规则顺序重要，越靠前优先级越高。

# ------------------- 流量嗅探配置 -------------------

sniffer:
  enable: true
  parse-pure-ip: true
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080, 8000, 8880]

# 流量嗅探允许Clash自动识别HTTP和TLS流量，
# 通过监听指定端口来准确区分应用流量，提高规则匹配精准度。
# 适合需要针对特定App流量做精准分流的用户。

# ------------------- profile 配置 -------------------

#profile:
  store-selected: true
  # 是否保存用户上次选择的节点，下次启动自动选中。
  store-fake-ip: true
  # 是否保存fake-ip模式开关状态。

