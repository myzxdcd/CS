#port: 7890
# HTTP代理监听端口。客户端需要配置此端口才能使用代理。
# 如果端口被占用或冲突，可以更改为其他端口，比如1080、8080等。

#socks-port: 7891
# SOCKS5代理监听端口。
# 部分应用支持SOCKS代理，配置时填写此端口。
# 不使用SOCKS代理可以注释或删除。

#allow-lan: true
# 是否允许局域网设备连接代理。
# true：允许局域网访问，可用手机等其他设备连接。
# false：仅本机可用。
# 开启时请注意局域网安全，避免被恶意访问。

#bind-address: "*"
# 监听地址，"*"表示所有网卡。
# 配合allow-lan=true，使局域网设备可访问代理。
# 若只需本机访问，可设置为 127.0.0.1。

#mode: rule
# 代理模式。
# rule：基于规则判断走代理还是直连，常用模式。
# global：全部流量走代理。
# direct：全部流量直连，不代理。
# script：基于脚本自定义代理逻辑。

#log-level: silent
# 日志等级，影响日志输出详细程度。
# 可选：silent（不输出日志）、error（错误）、warning（警告）、info（信息，默认）、debug（调试，最详细）。

external-controller: 127.0.0.1:7890
# Clash 控制接口监听地址及端口。
# 允许外部程序连接管理Clash。
# 请确保防火墙允许此端口连接。

dns！:
  enable: false
  # 是否启用 Clash 内置DNS解析功能。启用后Clash负责DNS查询和解析。
  ipv6: false
  # 是否启用IPv6解析。如果无IPv6环境建议关闭。
  listen: 127.0.0.1:5353
  # DNS监听地址与端口。默认本机监听5353端口。
  # 若想局域网设备使用此DNS，可改为 0.0.0.0:53 等。
  enhanced-mode: fake-ip
  # DNS增强模式。
  # 选项：
  #   fake-ip：使用伪造IP避免DNS污染，兼容大多数情况，推荐使用。
  #   redir-host：重定向模式，兼容性稍差。
  #   vanilla：直转系统DNS，最兼容但易受污染。
  fake-ip-filter:
    - '*.lan'
    - '*.local'
    - 'localhost.ptlogin2.qq.com'
    - 'stun.*.*'
    - 'stun.*'
    - 'dns.msftncsi.com'
    - 'www.msftncsi.com'
    - '*.ntp.org.cn'
    - '+.srv.nintendo.net'
    - '+.stun.playstation.net'
    - 'xbox.*.*.microsoft.com'
    - '+.msftconnecttest.com'
    - '+.msftncsi.com'
    - '+.router.asus.com'
  # fake-ip模式下排除伪造IP的域名列表，避免影响特定服务。
  # 支持通配符'*'（匹配任意字符串）和'+'（匹配一级子域）。

  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  # 主要DNS服务器，用于解析域名。
  # 这里使用阿里和腾讯公共DNS，稳定且响应快。
  # 也可替换为114.114.114.114、8.8.8.8、1.1.1.1等。

  fallback:
    - https://1.1.1.1/dns-query
    - https://8.8.8.8/dns-query
    - https://208.67.222.222/dns-query  
    - tls://dns.rubyfish.cn:853
  # 备用DNS服务器，当主nameserver无法解析时自动使用。
  # 支持DNS-over-HTTPS（DoH）和DNS-over-TLS（DoT）。
  # 配置多个提高解析成功率和冗余。

  fallback-filter:
    geoip: true
    ipcidr:
      - 240.0.0.0/4
  # 备用DNS的过滤规则，防止将内网/保留IP使用备用DNS解析。
  # geoip: true表示基于地理IP信息过滤。
  # ipcidr用来排除特定IP段。

  fallback-cache: true
  # 是否缓存备用DNS查询结果，减少请求次数，提升效率。

  proxy-server-nameserver:
    - https://1.1.1.1/dns-query
  # 当DNS请求经过代理时使用的DNS服务器。
  # 这里使用Cloudflare的DoH服务器保证隐私和速度。

  # default-nameserver 已禁用，避免污染
  # default-nameserver:
  #   - 114.114.114.114
  #   - 8.8.8.8
  # Clash默认DNS服务器，通常启用可能导致DNS污染，故注释。

  nameserver-policy:
    'geosite:cn':
      - 223.5.5.5
      - 119.29.29.29
  # 针对中国国内网站使用国内DNS，提高访问速度和准确率。
  # 这里利用geosite规则集判断域名。

# ------------------- 代理策略组配置 -------------------

proxy-groups:
  # 策略组用于将多个节点归为一组，方便分流与选择。

  - name: 节点选择
    type: select              # 类型为“选择”，用户可手动切换节点
    proxies:
      - 自动选择
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT               # 直连，不走代理
    icon: https://github.com/clash-verge-rev/clash-verge-rev/raw/main/src-tauri/icons/icon.png
  # type可选值：
  # - select：手动选择
  # - url-test：自动测速选择延迟最低节点
  # - fallback：顺序使用节点，失败自动切换
  # - load-balance：负载均衡分发流量

  - name: 自动选择
    type: url-test            # 自动测速并选择延迟最低节点
    include-all: true         # 包含所有节点进行测试
    interval: 86400           # 测试间隔，单位秒，这里为24小时
    tolerance: 50             # 延迟容忍值，超过此值的节点不被选
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png

  - name: 特殊使用
    type: select
    include-all: true
    filter: "(?i)台|新北|彰化|TW|Taiwan"
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png

  - name: 电报消息
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png

  - name: OpenAi
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png

  - name: 油管视频
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png

  - name: TikTok
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://fastly.jsdelivr.net/gh/Koolson/Qure/IconSet/Color/TikTok.png

  - name: 奈飞视频
    type: select
    proxies:
      - 节点选择
      - 自动选择
      - 奈飞节点          # 专门针对Netflix解锁优化的节点
      - 新加坡节点
      - 香港节点
      - 台湾节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Netflix.png

  - name: Google
    type: select
    proxies:
      - 节点选择
      - 美国节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 韩国节点
      - DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google.png

  - name: AppStore
    type: select
    proxies:
      - DIRECT               # 优先直连Apple服务器，防止误封
      - 节点选择
      - 美国节点
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 韩国节点
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple.png

  - name: 全球直连
    type: select
    proxies:
      - DIRECT
      - 节点选择
      - 自动选择
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png

  - name: 漏网之鱼
    type: select
    proxies:
      - 节点选择
      - 香港节点
      - 台湾节点
      - 新加坡节点
      - 日本节点
      - 美国节点
      - 韩国节点
      - 自动选择
      - DIRECT
    icon: https://img.icons8.com/?size=144&id=9Mz1BhM4ui54&format=png&color=000000
  # 兜底策略，匹配未被其他规则匹配的流量走此组。

  # 以下为按节点名称自动分类的节点组，方便管理大量节点。

  - name: 香港节点
    type: select
    include-all: true
    filter: "(?i)港|HK|hk|Hong Kong|HongKong|hongkong"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
  # filter支持正则表达式匹配节点名称，(?i)忽略大小写。

  - name: 台湾节点
    type: select
    include-all: true
    filter: "(?i)台|新北|彰化|TW|Taiwan"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png

  - name: 日本节点
    type: select
    include-all: true
    filter: "(?i)日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png

  - name: 美国节点
    type: select
    include-all: true
    filter: "(?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png

  - name: 新加坡节点
    type: select
    include-all: true
    filter: "(?i)新加坡|坡|狮城|SG|Singapore"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png

  - name: 韩国节点
    type: select
    include-all: true
    filter: "(?i)KR|Korea|KOR|首尔|韩|韓"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png

  - name: 奈飞节点
    type: select
    include-all: true
    filter: "(?i)NF|奈飞|解锁|Netflix|NETFLIX|Media|流媒体"
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png

# ------------------- 远程规则配置（rule-providers） -------------------

rule-providers:
  SteamCN:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/SteamCN/SteamCN.list
    path: ./ruleset/SteamCN.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Telegram:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Telegram/Telegram.list
    path: ./ruleset/Telegram.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  OpenAi:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/OpenAI/OpenAI.list
    path: ./ruleset/OpenAi.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  YouTube:
    url: https://raw.githubusercontent.com/myzxdcd/CS/refs/heads/main/Clash/YouTube.yaml
    path: ./ruleset/YouTube.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Netflix:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Netflix/Netflix.list
    path: ./ruleset/Netflix.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  TikTok:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok.list
    path: ./Ruleset/TikTok.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Google:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Google/Google.list
    path: ./ruleset/Google.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Apple:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Apple/Apple.list
    path: ./ruleset/Apple.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  HT:
    url: https://raw.githubusercontent.com/myzxdcd/CS/refs/heads/main/Clash/HT
    path: ./Ruleset/HT
    behavior: classical
    interval: 86400
    format: text
    type: http

  ChinaIp:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Surge/ChinaIPs/ChinaIPs.list
    path: ./Ruleset/ChinaIPs.list
    behavior: classical
    interval: 86400
    format: text
    type: http

  Lan:
    url: https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Lan/Lan.list
    path: ./Ruleset/Lan.list
    behavior: classical
    interval: 86400
    format: text
    type: http

# 远程规则添加说明：
# 新增规则提供者时，复制对应区块，修改url为规则文件链接，
# path为本地缓存文件相对路径，interval为更新周期（秒），
# behavior大多使用classical，format可为text/yaml/json。

# ------------------- 规则配置 -------------------

rules:
  - DOMAIN-SUFFIX,dns.google, 节点选择
  - DOMAIN-SUFFIX,cloudflare-dns.com, 节点选择
  - DOMAIN-SUFFIX,rubyfish.cn, 节点选择
  - "RULE-SET,SteamCN, 全球直连"
  - "RULE-SET,Telegram, 电报消息"
  - "RULE-SET,OpenAi, OpenAi"
  - "RULE-SET,YouTube, 油管视频"
  - "RULE-SET,Netflix, 奈飞视频"
  - "RULE-SET,TikTok, TikTok"
  - "RULE-SET,Google, Google"
  - "RULE-SET,Apple, AppStore"
  - "RULE-SET,HT,特殊使用"
  - "RULE-SET,ChinaIp,全球直连, no-resolve"
  - "RULE-SET,Lan,全球直连"
  - "GEOSITE,cn, 全球直连, no-resolve"
  - "GEOIP,CN, 全球直连, no-resolve"
  - "MATCH, 漏网之鱼"        # 兜底规则，未匹配流量走“漏网之鱼”组

# 规则解释：
# - DOMAIN-SUFFIX 表示匹配某个域名后缀。
# - RULE-SET 调用远程规则文件中的规则。
# - GEOSITE 根据地理位置域名分组。
# - GEOIP 根据IP地址归属国家分组。
# - MATCH 匹配所有剩余流量。

# 规则添加示例：
# - DOMAIN-SUFFIX,example.com, 自动选择
# - DOMAIN-KEYWORD,facebook, 节点选择
# - IP-CIDR,8.8.8.8/32, DIRECT

# 规则顺序重要，越靠前优先级越高。

# ------------------- 流量嗅探配置 -------------------

sniffer:
  enable: true
  parse-pure-ip: true
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080, 8000, 8880]

# 流量嗅探允许Clash自动识别HTTP和TLS流量，
# 通过监听指定端口来准确区分应用流量，提高规则匹配精准度。
# 适合需要针对特定App流量做精准分流的用户。

# ------------------- profile 配置 -------------------

#profile:
  store-selected: true
  # 是否保存用户上次选择的节点，下次启动自动选中。
  store-fake-ip: true
  # 是否保存fake-ip模式开关状态。

